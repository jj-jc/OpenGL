cmake_minimum_required(VERSION 3.0.0)
project(VisualObjects VERSION 0.1.0)
set(CMAKE_CXX_STANDARD 17)

set(SRC
    ${CMAKE_CURRENT_SOURCE_DIR}/src/main.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/Shader.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/Renderer.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/VertexBuffer.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/IndexBuffer.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/VertexBufferLayout.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/VertexArray.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/Texture.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/tests/TestClearColor.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/tests/TestPanel.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/tests/Test.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/tests/TestFreeType.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/Menu.cpp
    # ${CMAKE_CURRENT_SOURCE_DIR}/src/Font.cpp
    )

set(INC
    ${CMAKE_CURRENT_SOURCE_DIR}/src/
    ${CMAKE_CURRENT_SOURCE_DIR}/external/
    ${CMAKE_CURRENT_SOURCE_DIR}/src/tests/
    ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/
    # ${CMAKE_CURRENT_SOURCE_DIR}/external/stb_image/
    )

# include the source files for the imgui library
set(IMGUI_SOURCE 
    ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/imgui_demo.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/imgui_draw.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/imgui_tables.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/imgui_widgets.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/imgui.cpp
    # backends source files
    ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/backends/imgui_impl_glfw.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/backends/imgui_impl_opengl3.cpp
    )
set(SRC ${SRC} ${IMGUI_SOURCE})

include_directories(${INC})


# libraries

# glew
# set(glew_DIR /usr/share/cmake-3.16/Modules/)
find_package(GLEW REQUIRED)
include_directories(${GLEW_INCLUDE_DIRS})
link_libraries(${GLEW_LIBRARIES})

# OpenGL
find_package(OpenGL REQUIRED)
# include_directories(${OPENGL_gl_INCLUDE_DIRS})
link_libraries(${OPENGL_gl_LIBRARY})   

# GLFW
find_package(glfw3 REQUIRED)
link_libraries(glfw)

# Log4cxx 
link_libraries(log4cxx)

# FreeType
find_package(Freetype REQUIRED)
include_directories(${FREETYPE_INCLUDE_DIRS})
link_libraries(${FREETYPE_LIBRARY})

# generate external resources
# this library is already generated by Shaders so it's commented.
# add_library(imgui_lib STATIC
#     ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/imgui_demo.cpp
#     ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/imgui_draw.cpp
#     ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/imgui_impl_glfw.cpp
#     ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/imgui_impl_opengl3.cpp
#     ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/imgui_tables.cpp
#     ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/imgui_widgets.cpp
#     ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/imgui.cpp
#     )

# add_library(stb_image_lib STATIC
#     ${CMAKE_CURRENT_SOURCE_DIR}/external/stb_image/stb_image.cpp
#     )

# target_include_directories(imgui_lib PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/external/imgui/)

add_executable(${PROJECT_NAME} ${SRC})

target_link_libraries(${PROJECT_NAME} PUBLIC)